<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="205" started-at="2016-10-04T17:13:53Z" finished-at="2016-10-04T17:13:53Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="205" started-at="2016-10-04T17:13:53Z" finished-at="2016-10-04T17:13:53Z">
      <class name="GhostModule">
        <test-method status="FAIL" signature="setUp()[pri:0, instance:GhostModule@26be92ad]" name="setUp" is-config="true" duration-ms="0" started-at="2016-10-04T12:13:53Z" finished-at="2016-10-04T12:13:53Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver is not executable: /Users/Cates/git/GhostBlogMac/jar/chromedriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver is not executable: /Users/Cates/git/GhostBlogMac/jar/chromedriver
	at com.google.common.base.Preconditions.checkState(Preconditions.java:199)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:125)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:116)
	at GhostModule.setUp(GhostModule.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="Login()[pri:0, instance:GhostModule@26be92ad]" name="Login" duration-ms="11" started-at="2016-10-04T12:13:53Z" finished-at="2016-10-04T12:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="SKIP" signature="tearDown(org.testng.ITestResult)[pri:0, instance:GhostModule@26be92ad]" name="tearDown" is-config="true" duration-ms="0" started-at="2016-10-04T12:13:53Z" finished-at="2016-10-04T12:13:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- GhostModule -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
